---
- name: AMIBUILDER Provision build instance
  connection: local
  hosts: 127.0.0.1
  gather_facts: false
  tags:
  - amibuilder
  vars:
  - ec2_ami: "{{base_images[site.base_image][region]}}"
  - ec2_group: "{{site.ec2_group}}"
  - ec2_keypair: "{{site.ec2_keypair}}"
  - ec2_region: "{{region}}"
  - ec2_role: "{{site.ec2_role}}"
  - ec2_type: "{{site.ec2_type}}"
  tasks:
  - name: Provision build instance
    local_action:
      module: ec2
      image: "{{ec2_ami}}"
      region: "{{ec2_region}}"
      group: "{{ec2_group}}"
      keypair: "{{ec2_keypair}}"
      instance_type: "{{ec2_type}}"
      instance_profile_name: "{{ec2_role}}"
      instance_tags: '{"service":"{{amibuilder}}","amibuilder":"{{amibuilder}}", "env":"{{env}}", "Name":"AMIBUILDER-{{amibuilder}}"}'
      user_data: "{{lookup('file', 'scripts/centos-sudoers.yml')}}"
      wait: true
      count: 1
    register: ec2
  - name: Wait for instance boot
    local_action:
      module: wait_for
      host: "{{item.public_dns_name}}"
      port: 22
      delay: 60
      timeout: 600
      state: started
    with_items: ec2.instances

- name: AMIBUILDER Create AMI image
  hosts: "tag_amibuilder_{{amibuilder}}"
  tags:
  - amiimager
  sudo: true
  user: "{{site.base_user}}"
  roles:
  - amiclean
  tasks:
  - local_action:
      module: ec2_ami
      region: "{{ec2_region}}"
      instance_id: "{{ec2_id}}"
      description: "{{env}} {{amibuilder}} {{ansible_date_time.iso8601}} {{ec2_instance_type}}"
      wait: yes
      wait_timeout: 120000
      name: "{{env}}-{{amibuilder}}-{{ansible_date_time.year}}{{ansible_date_time.month}}{{ansible_date_time.day}}{{ansible_date_time.hour}}{{ansible_date_time.minute}}{{ansible_date_time.second}}"
      no_reboot: no
    register: ami
    sudo: false

- name: AMIBUILDER terminate build instance
  connection: local
  hosts: tag_amibuilder_{{amibuilder}}
  gather_facts: false
  tags:
  - amicleaner
  vars:
  - ec2_type: "{{site.ec2_type}}"
  - ec2_group: "{{site.ec2_group}}"
  - ec2_keypair: "{{site.ec2_keypair}}"
  - ec2_region: "{{region}}"
  - ec2_role: "{{site.ec2_role}}"
  tasks:
  - local_action:
      module: ec2
      group: "{{ec2_group}}"
      instance_type: "{{ec2_type}}"
      region: "{{ec2_region}}"
      instance_ids: "{{ec2_id}}"
      state: absent
